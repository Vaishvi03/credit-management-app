{"version":3,"sources":["logo.png","components/users-list.component.js","components/view-user.component.js","components/transfer.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","User","props","react_default","a","createElement","user","name","credit","react_router_dom","to","_id","UsersList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","_this2","console","log","axios","get","then","response","setState","data","catch","error","map","currentUser","i","users_list_component_User","key","className","style","marginTop","userList","Component","Popup","fromid","toid","fromName","toName","onSubmit","bind","assertThisInitialized","handleChange","handleCreditChange","e","preventDefault","alert","concat","transfer","post","res","obj","email","Number","history","push","target","value","text","type","defaultValue","min","max","maxCredit","onChange","ViewUser","_this3","id","showPopup","_this4","match","params","filter","onClick","togglePopup","view_user_component_Popup","Transfers","transfers","curr","transferList","App","href","src","logo","width","height","alt","color","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caf8ab6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff61f89b.png\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst User = props => (\r\n    <tr>\r\n        <td>{props.user.name}</td>\r\n        <td>{props.user.credit}</td>\r\n        <td>\r\n            <Link to={\"/view/\"+props.user._id}>View</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nclass UsersList extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {users:[]};\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"Mounted\");\r\n        axios.get('http://localhost:4000/users/')\r\n            .then(response => {\r\n                this.setState({users:response.data});\r\n            })\r\n            .catch(function(error){\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    \r\n\r\n\r\n    userList() {\r\n        return this.state.users.map(function(currentUser, i){\r\n            return <User user={currentUser} key={i} />;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3 >Users List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Credits</th>\r\n                            <th>View User</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.userList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersList;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Popup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            fromid:this.props.fromid,\r\n            toid:\"\",\r\n            fromName:\"\",\r\n            toName:\"\",\r\n            credit:0\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCreditChange = this.handleCreditChange.bind(this);\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        if(this.state.toid===\"\"){\r\n            alert(\"Choose user\")\r\n        }\r\n        else{\r\n            console.log(`Form submitted:`);\r\n            console.log(`From id: ${this.state.fromid}`);\r\n            console.log(`Toid: ${this.state.toid}`);\r\n            console.log(`Credit transferd: ${this.state.credit}`);\r\n\r\n            axios.get('http://localhost:4000/users/'+this.state.fromid)\r\n            .then(response =>{\r\n                this.setState({\r\n                    fromName:response.data.name\r\n                });\r\n                axios.get('http://localhost:4000/users/'+this.state.toid)\r\n                .then(response =>{\r\n                    this.setState({\r\n                        toName:response.data.name\r\n                    });\r\n                    const transfer ={\r\n                        fromid : this.state.fromid,\r\n                        toid: this.state.toid,\r\n                        fromName:this.state.fromName,\r\n                        toName:this.state.toName,\r\n                        credit: this.state.credit\r\n                    }\r\n        \r\n                    axios.post('http://localhost:4000/transfers/add',transfer)\r\n                        .then(res => console.log(res.data));\r\n                })\r\n                .catch(function(error){\r\n                    console.log(function(error){\r\n                        console.log(error);\r\n                    })\r\n                });\r\n            })\r\n            .catch(function(error){\r\n                console.log(function(error){\r\n                    console.log(error);\r\n                })\r\n            });\r\n\r\n            \r\n\r\n            \r\n\r\n            axios.get('http://localhost:4000/users/'+this.state.fromid)\r\n                .then(response =>{\r\n                    const obj ={\r\n                        name:response.data.name,\r\n                        email:response.data.email,\r\n                        credit:response.data.credit-this.state.credit\r\n                    }\r\n                    console.log(obj);\r\n                    axios.post('http://localhost:4000/users/update/'+this.state.fromid,obj)\r\n                        .then(res => console.log(res.data));\r\n                })\r\n                .catch(function(error){\r\n                    console.log(function(error){\r\n                        console.log(error);\r\n                    })\r\n                });\r\n\r\n            axios.get('http://localhost:4000/users/'+this.state.toid)\r\n            .then(response =>{\r\n                const obj ={\r\n                    name:response.data.name,\r\n                    email:response.data.email,\r\n                    credit:(Number(response.data.credit)+Number(this.state.credit))\r\n                }\r\n                console.log(obj);\r\n                axios.post('http://localhost:4000/users/update/'+this.state.toid,obj)\r\n                    .then(res =>{ \r\n                        console.log(res.data)\r\n                        this.props.history.push('/');\r\n                    });\r\n                    \r\n            })\r\n            .catch(function(error){\r\n                console.log(function(error){\r\n                    console.log(error);\r\n                })\r\n            });\r\n\r\n            \r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            toid: e.target.value\r\n        });\r\n    }\r\n\r\n    handleCreditChange(e){\r\n        this.setState({\r\n            credit: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className='popup'>\r\n        <br/>\r\n        <hr/>\r\n        <br/>\r\n            <div className='popup_inner'>\r\n                <h1 className='text-center'>{this.props.text}</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Enter credit to transfer: </label>\r\n                        <input type=\"number\" defaultValue=\"0\" className=\"form-control\" min=\"0\" max={this.props.maxCredit} onChange={this.handleCreditChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Select user from list:</label>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <select className=\"required\" value={this.state.toid} onChange={this.handleChange}>\r\n                            <option value=\"\">Choose User</option>   \r\n                            {this.props.userList};\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Transfer Credit\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  class ViewUser extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:\"\",\r\n            name:\"\",\r\n            email:\"\",\r\n            credit:0,\r\n            showPopup: false,\r\n            users:[]\r\n        }\r\n    }\r\n    togglePopup() {\r\n        this.setState({\r\n          showPopup: !this.state.showPopup\r\n        });\r\n      }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:4000/users/')\r\n        .then(response => {\r\n            this.setState({users:response.data});\r\n            \r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n\r\n        axios.get('http://localhost:4000/users/'+this.props.match.params.id)\r\n            .then(response =>{\r\n                this.setState({\r\n                    name:response.data.name,\r\n                    email:response.data.email,\r\n                    credit:response.data.credit,\r\n                    id: response.data._id,\r\n                    users: this.state.users\r\n                });\r\n            })\r\n            .catch(function(error){\r\n                console.log(function(error){\r\n                    console.log(error);\r\n                })\r\n            });\r\n    }\r\n\r\n    userList() {\r\n        let id=this.state.id;\r\n        return this.state.users.filter(function(currentUser){\r\n            return (currentUser._id!=id);\r\n        })\r\n        .map(function(currentUser, i){\r\n            return (<option value={currentUser._id} key={i}>{currentUser.name}</option>);\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>User</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Credit</th>\r\n                            <th>Transfer Credit</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{ this.state.name }</td>\r\n                            <td>{ this.state.email }</td>\r\n                            <td>{ this.state.credit }</td>\r\n                            <td>\r\n                                <button onClick={this.togglePopup.bind(this)}>Transfer</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {this.state.showPopup ? \r\n                    <Popup\r\n                        text='Transfer Credit'\r\n                        userList = {this.userList()}\r\n                        transfer={this.togglePopup.bind(this)}\r\n                        history={this.props.history}\r\n                        maxCredit = {this.state.credit}\r\n                        fromid = {this.state.id}\r\n                    />\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewUser;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Transfers extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {transfers:[]};\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"Mounted\");\r\n        axios.get('http://localhost:4000/transfers/')\r\n            .then(response => {\r\n                this.setState({transfers:response.data});\r\n             })\r\n            .catch(function(error){\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    \r\n\r\n\r\n    transferList() {\r\n        return  this.state.transfers.map(function(curr,i){\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{curr.fromName}</td>\r\n                    <td>{curr.toName}</td>\r\n                    <td>{curr.credit}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>Transfer List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>From</th>\r\n                            <th>To</th>\r\n                            <th>Credit</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.transferList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Transfers;","import React,{ Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router,Route,Link} from \"react-router-dom\";\nimport UsersList from \"./components/users-list.component\";\nimport ViewUser from \"./components/view-user.component\";\nimport Transfers from \"./components/transfer.component\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\n\nclass App extends Component{\n  render(){\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"https://www.linkedin.com/in/akash-verma-b3591591/\" target=\"_blank\">\n              <img src={logo} width=\"50\" height=\"50\" alt=\"Logo.png\" />\n            </a>\n            <Link to=\"/\" className=\"navbar-brand font-weight-bold\" style={{color:'pink'}}>Credit Management App</Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link font-weight-bold\">Users</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/transfer\" className=\"nav-link font-weight-bold\">Transfers</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <br/>\n          <Route path=\"/\" exact component={UsersList} />\n          <Route path=\"/view/:id\" component={ViewUser} />\n          <Route path=\"/transfer\" component={Transfers} />\n        </div>\n       </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}